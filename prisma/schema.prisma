// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator jsClient {
  provider = "prisma-client-js"
}

generator pyClient {
  provider  = "prisma-client-py"
  interface = "asyncio"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
// datasource db {
//   provider = "sqlite"
//   url      = "file:dev.sqlite"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id          String    @id
  shop        String
  state       String
  isOnline    Boolean   @default(false)
  scope       String?
  expires     DateTime?
  accessToken String
  userId      BigInt?
}

model EmailProvider {
  id       Int        @id @default(autoincrement())
  name     String
  settings Settings[]
}

model LLMProvider {
  id       Int        @id @default(autoincrement())
  name     String
  settings Settings[]
}

model EmailGenerator {
  id                 Int      @id @default(autoincrement())
  shop               String
  productId          String
  productTitle       String
  productHandle      String
  productVariantId   String
  productDescription String
  salt               String?
  likeness           Int      @default(3)
  createdAt          DateTime @default(now())
  Email              Email[]
}

model Email {
  id               Int             @id @default(autoincrement())
  shop             String
  name             String?
  html             String?
  text             String?
  createdAt        DateTime        @default(now())
  emailGeneratorId Int?
  emailGenerator   EmailGenerator? @relation(fields: [emailGeneratorId], references: [id])
  rating           Int             @default(0)
}

model Settings {
  id              Int            @id @default(autoincrement())
  shop            String
  emailProviderId Int
  emailProvider   EmailProvider? @relation(fields: [emailProviderId], references: [id])
  emailKey        String?
  lLMProviderId   Int
  lLMProvider     LLMProvider?   @relation(fields: [lLMProviderId], references: [id])
  lLMKey          String
  brand           String?
  createdAt       DateTime       @default(now())
}
